AluraPlus

No CSS, use <button> quando realmente for realizar algo, algum movimento dinâmico, puxar uma função através do JS e etc..
quando precisar de um "botão" que só te redirecione a uma página, use a tag âncora

Ex, em um formulário com dois botões, e um deles é "Apagar"
*Oque deverá ser usado é o <button> por executar uma função ao ser clicado: apagar os dados do formulário

GRID - https://www.alura.com.br/artigos/criando-layouts-com-css-grid-layout?_gl=1*2mc3ck*_ga*MTk4ODE1MTQ4MC4xNzE1MTM2NzQ1*_ga_1EPWSW3PCS*MTcxNjYxMDQ4NC4yNS4xLjE3MTY2MTE0MzUuMC4wLjA.*_fplc*JTJGV0ZvbG1Ob2YzSVJQT2VRQXJYNGthV0pvRk1rbUxiRG1zbEdMJTJCaWZOdU42OTElMkJhcyUyRjlmc2hiNElMWThQeVNXZEt5NkdCR3czdWszNTklMkY2Wk1pNDQlMkZYVTFReVdidHhKSGxSbEtJQkRIa3QwNDlNbTAydWklMkYlMkJYcElTeXFPQSUzRCUzRA..

display: grid;
grid-template-columns: 50% 25% 25%;

align-items: alinha na vertical
justify-content: alinha na horizontal

text-align, alinha todos os elementos dentro de uma tag que por padrão seja block, ex: div

<div class="container">
	<h2 class="container__titulo">Alura Cats!</h2>
	<img src="https://thecatapi.com/api/images/get?format=src&type=gif" alt=”imagem de gatos” class="container__imagem">
  	<p>Para mais informações:</p>
	<a href="www.alura.com.br" class="container__botao">Acesse a Alura<a>
</div>

no CSS:
para centralizar tudo dentro da DIV
.container {
	text-align: center;
}


display inline-block: https://medium.com/collabcode/pare-de-chutar-e-aprenda-como-funciona-o-display-inline-block-4e6cba2f19d4

<ul class="dispositivos-lista">
      <li>
        <img src="./img/tv.png" alt="Ícone de televisão">
        <h3 class="lista-item">TV</h3>
      </li>
      <li>
        <img src="./img/computador.png" alt="Ícone de computador">
        <h3 class="lista-item">Computadores</h3>
      </li>
      <li>
        <img src="./img/celular.png" alt="Ícone de celular">
        <h3 class="lista-item">Celulares e tablets</h3>
      </li>
    </ul>

No CSS, para colocar cada LI em linha

.dispositivos-lista {
	display: flex;
}

*obs: ignorem os sublinhados nos códigos, isso ocorre por meio de uma extensão que instalei, onde me permite escrever apenas em inglês (emoji sorrindo-rindo), para treinar JavaScript e um pouco do idioma.

Pseudo-classes CSS:

Uma pseudo-classe CSS é uma propriedade que é adicionada ao final dos seletores que especifica o estado que esse elemento está. Ele detecta, por exemplo, se o elemento está com um mouse em cima dele, construindo uma experiência interativa com o usuário. Aqui, você pode conferir uma lista de pseudo-classes para testar no seu projeto:

:focus: é aplicada quando um elemento está em foco, pode ser pelo clique do mouse ou seleção pelo teclado. Um exemplo é quando os campos de escrita em formulários estão selecionados para o usuário escrever.
:hover: detecta quando um usuário está com o mouse em cima do elemento, sem necessariamente estar clicando.
:active: detecta quando o elemento está ativo, quando há uma interação, por exemplo: o link <a> está sendo clicado.
:visited: detecta quando o link <a> já foi visitado, ou seja, se você já clicou anteriormente naquele link.
:link: detecta quando é um link <a> que nunca foi clicado antes.

A sintaxe correta de uso de pseudo-classes é essa:

seletor:pseudo-classe {
  propriedade: valor;
}

